{"version":3,"sources":["api/api.js","redux/movies-reducer.js","components/search/search.jsx","components/header/header.jsx","components/movies-item/movies-item.jsx","components/movies/movies.jsx","redux/movie-item-reducer.js","components/movie-page/movie-details.jsx","components/movie-page/movie-page.jsx","components/app/app.jsx","redux/store.js","index.js"],"names":["MovieAPI","axios","itemId","searchTerm","SET_MOVIES","initialState","movies","setMovies","type","moviesReducer","state","action","Search","useState","search","setSearch","dispatch","useDispatch","className","onSubmit","e","preventDefault","a","response","data","results","name","placeholder","value","onChange","target","Header","to","MoviesItem","id","title","poster_path","overview","vote_average","src","alt","Movies","useSelector","useEffect","map","item","SET_MOVIE","movieItem","movieItemReducer","MovieDetails","vote_count","release_date","runtime","withRouter","props","movie","match","params","getMovieItem","App","exact","path","render","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.00affc04.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nexport const MovieAPI = {\r\n    getMovies () {\r\n        return axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=62dd341cbea2b6a589505b581e218f40&page=1\")\r\n    },\r\n\r\n    getMovieItem (itemId) {\r\n        return axios.get(`https://api.themoviedb.org/3/movie/${itemId}?api_key=62dd341cbea2b6a589505b581e218f40`)\r\n    },\r\n\r\n    searchMovie (searchTerm) {\r\n        return axios.get(`https://api.themoviedb.org/3/search/movie?&api_key=62dd341cbea2b6a589505b581e218f40&query=${searchTerm}`)\r\n    }\r\n}","import { MovieAPI } from \"../api/api\"\r\n\r\nconst SET_MOVIES = \"SET_MOVIES\"\r\n\r\nconst initialState = {\r\n    movies: []\r\n}\r\n\r\nconst moviesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.movies\r\n            }\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const setMovies = (movies) => ({type: SET_MOVIES, movies});\r\n\r\nexport const getMovies = () => async (dispatch) => {\r\n    const response = await MovieAPI.getMovies();\r\n    dispatch(setMovies(response.data.results));\r\n}\r\n\r\n\r\nexport const searchMovie = (searchTerm) => async (dispatch) => {\r\n    const response = await MovieAPI.searchMovie(searchTerm);\r\n    dispatch(setMovies(response.data.results))\r\n}\r\n\r\nexport default moviesReducer;","import { useState } from \"react\";\r\nimport {  useDispatch } from \"react-redux\";\r\nimport {searchMovie} from \"../../redux/movies-reducer\";\r\nimport \"./search.css\";\r\n\r\nconst Search = () => {\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (search) {\r\n      dispatch(searchMovie(search));\r\n\r\n      setSearch(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n      <form className=\"search\" onSubmit={handleOnSubmit}>\r\n        <input className=\"search__input\"\r\n          type=\"text\"\r\n          name=\"search\"\r\n          placeholder=\"Search movie...\"\r\n          value={search}\r\n          onChange={(e) =>  setSearch(e.target.value)}\r\n        />\r\n        <button className=\"search__btn\" type=\"submit\">Search</button>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default Search;","import { Link } from \"react-router-dom\";\r\n\r\nimport Search from \"../search/search\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to=\"/\" className=\"header__title\">\r\n                Movies\r\n            </Link>\r\n            <Search/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Link } from \"react-router-dom\";\r\nimport \"./movies-item.css\";\r\n\r\nconst MoviesItem = ({id, title, poster_path, overview, vote_average}) => {\r\n\r\n    const IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n    return (\r\n        <Link to={`/movie-page/${id}`} className=\"movie__item\">\r\n            <img className=\"movie__item-poster\" src={IMG_API + poster_path} alt=\"poster\" />\r\n            <div className=\"movie__item-title\">{title}</div>\r\n            <div className=\"movie__item-overview\">\r\n                <h3>Overview:</h3>\r\n                <p>{overview}</p>\r\n            </div>\r\n            <span className=\"movie__item-rate\">{vote_average}</span>\r\n        </Link>  \r\n    )\r\n}\r\n\r\nexport default MoviesItem;","import MovieItem from \"../movies-item/movies-item\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {getMovies} from \"../../redux/movies-reducer\";\r\n\r\nimport \"./movies.css\";\r\n\r\nconst Movies = () => {\r\n    \r\n    const movies = useSelector(state => state.movies.movies)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getMovies());\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"movies\">\r\n           {movies.map(item => {\r\n               return <MovieItem key={item.id} {...item}/>\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;","import { MovieAPI } from \"../api/api\"\r\n\r\nconst SET_MOVIE = \"SET_MOVIE\"\r\n\r\nconst initialState = {\r\n    movieItem: {}\r\n}\r\n\r\nconst movieItemReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MOVIE:\r\n            return {\r\n                ...state,\r\n                movieItem: action.movieItem\r\n            }\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const setMovie = (movieItem) => ({type: SET_MOVIE, movieItem});\r\n\r\n\r\nexport const getMovieItem = (itemId) => async (dispatch) => {\r\n    let response = await MovieAPI.getMovieItem(itemId);\r\n    dispatch(setMovie(response.data))\r\n}\r\n\r\n\r\nexport default movieItemReducer;","\r\nimport \"./movie-page.css\";\r\n\r\nconst MovieDetails = ({title, poster_path, overview, vote_average, vote_count, release_date, runtime}) => {\r\n\r\n    const IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n    return (\r\n        <>\r\n            <div className=\"poster\">\r\n                <img className=\"movie__poster\" src={IMG_API + poster_path} alt=\"poster\" />\r\n            </div>\r\n            <div className=\"movie__description\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                \r\n                <div className=\"runtime\">\r\n                    <b>Runtime:</b> {runtime}min.\r\n                </div>\r\n\r\n                <div className=\"genre\">\r\n                    <b>Release:</b> <span>{release_date}</span>\r\n                </div>\r\n\r\n                <div className=\"overview\">\r\n                    <b>Overview:</b>\r\n                    <span> {overview}</span>\r\n                </div>\r\n                \r\n                <div className=\"rating\">\r\n                    <div><b>Rating:</b> <span> {vote_average}</span></div>\r\n                    <div><b>Vote:</b> <span>{vote_count}</span></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieDetails;","import { Link } from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { getMovieItem } from \"../../redux/movie-item-reducer\";\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport MovieDetails from \"./movie-details\";\r\n\r\n\r\nimport \"./movie-page.css\";\r\n\r\nconst MoviePage = (props) => {\r\n\r\n    const movie = useSelector(state => state.item.movieItem)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let itemId = props.match.params.itemId;\r\n        dispatch(getMovieItem(itemId));\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"movie__page\">\r\n            <div className=\"back\">\r\n                <Link to=\"/\">Повернутись назад</Link>\r\n            </div>\r\n\r\n            <div className=\"movie\">\r\n                <MovieDetails {...movie}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(MoviePage);","import Header from \"../header/header\";\nimport Movies from \"../movies/movies\";\nimport MoviePage from \"../movie-page/movie-page\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport './app.css';\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <Header/>\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\" render={() => <Movies/>}/>\n          <Route path=\"/movie-page/:itemId?\" render={() => <MoviePage/>}/>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport moviesReducer from \"./movies-reducer\";\r\nimport movieItemReducer from \"./movie-item-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n    movies: moviesReducer,\r\n    item: movieItemReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}